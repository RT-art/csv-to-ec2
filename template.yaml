AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >-
  Stack to automatically create EC2 instances from CSV files uploaded to S3.
  Creates VPC, Subnet, S3 bucket, and Lambda function.

Resources:
  # ------------------------------------------------------------
  #  Network Resources
  # ------------------------------------------------------------
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-VPC"

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-IGW"

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true # Automatically assign public IP to EC2
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-PublicSubnet"

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-RouteTable"

  DefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref RouteTable

  # ------------------------------------------------------------
  #  S3 Bucket
  # ------------------------------------------------------------
  CsvFileBucket:
    Type: AWS::S3::Bucket
    Properties:
      # Bucket name must be globally unique, so includes Account ID and Region
      BucketName: !Sub "csv-to-ec2-${AWS::AccountId}-${AWS::Region}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # ------------------------------------------------------------
  #  Lambda Function & IAM Role
  # ------------------------------------------------------------
  CsvToEc2Function:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-CsvToEc2Function"
      Handler: app.lambda_handler
      Runtime: python3.13
      CodeUri: src/
      Timeout: 60
      Environment:
        Variables:
          TARGET_SUBNET_ID: !Ref PublicSubnet
      Policies:
        # 1. Permission to read CSV files from S3 bucket
        - S3ReadPolicy:
            BucketName: !GetAtt CsvFileBucket.Name
        # 2. Permission to create and tag EC2 instances
        - Statement:
          - Effect: Allow
            Action:
              - ec2:RunInstances
              - ec2:CreateTags
            Resource: "*" # In production, specify resources more strictly
      # Lambda trigger configuration
      Events:
        S3CsvUpload:
          Type: S3
          Properties:
            Bucket: !Ref CsvFileBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .csv

Outputs:
  S3BucketName:
    Description: "S3 bucket name for uploading CSV files to create EC2 instances"
    Value: !Ref CsvFileBucket
  VpcId:
    Description: "ID of the created VPC"
    Value: !Ref VPC
  PublicSubnetId:
    Description: "ID of the created public subnet. Please specify this value in the CSV file."
    Value: !Ref PublicSubnet
