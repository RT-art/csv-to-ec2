AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >-
  S3にアップロードされたCSVファイルからEC2インスタンスを自動作成するスタック。
  VPC、サブネット、S3バケット、Lambda関数、およびEC2インスタンス用のIAMロールを作成します。
  作成されるEC2インスタンスは、デフォルトでSSM（Systems Manager）が有効になります。

Resources:

  # ------------------------------------------------------------
  # ネットワークリソース
  # ------------------------------------------------------------
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-VPC"

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-IGW"

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true # パブリックIPを自動割り当て
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-PublicSubnet"

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-RouteTable"

  DefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref RouteTable

  # ------------------------------------------------------------
  # EC2インスタンス用IAMロール（SSM有効化のため）
  # ------------------------------------------------------------
  EC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: "ec2.amazonaws.com"
            Action: "sts:AssumeRole"
      # Systems Managerを利用するためのAWS管理ポリシー
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-EC2InstanceRole"

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EC2InstanceRole

  # ------------------------------------------------------------
  # S3バケット（CSVファイルアップロード用）
  # ------------------------------------------------------------
  CsvFileBucket:
    Type: AWS::S3::Bucket
    Properties:
      # バケット名はグローバルで一意にするため、アカウントIDとリージョンを含める
      BucketName: !Sub "csv-to-ec2-${AWS::AccountId}-${AWS::Region}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # ------------------------------------------------------------
  # Lambda関数 & 実行ロール
  # ------------------------------------------------------------
  CsvToEc2Function:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-CsvToEc2Function"
      Handler: app.lambda_handler
      Runtime: python3.12 # LTSであるPython 3.12を使用
      CodeUri: src/
      Timeout: 60
      Environment:
        Variables:
          TARGET_SUBNET_ID: !Ref PublicSubnet
          SSM_INSTANCE_PROFILE_ARN: !GetAtt EC2InstanceProfile.Arn
      Policies:
        # 1. S3バケットからCSVファイルを読み取る権限
        - S3ReadPolicy:
            BucketName: !GetAtt CsvFileBucket.Name
        # 2. EC2インスタンスを作成、タグ付けし、IAMロールをアタッチする権限
        - Statement:
            - Effect: Allow
              Action:
                - ec2:RunInstances
                - ec2:CreateTags
              Resource: "*" # 本番環境では、作成するリソースに応じてより厳密な権限設定を推奨
            - Effect: Allow
              Action: iam:PassRole
              Resource: !GetAtt EC2InstanceRole.Arn # 特定のIAMロールのみをEC2に渡すことを許可
      # Lambdaのトリガー設定 (S3へのCSVファイル作成)
      Events:
        S3CsvUpload:
          Type: S3
          Properties:
            Bucket: !Ref CsvFileBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .csv

Outputs:
  S3BucketName:
    Description: "CSVファイルをアップロードするS3バケット名"
    Value: !Ref CsvFileBucket
  VpcId:
    Description: "作成されたVPCのID"
    Value: !Ref VPC
  PublicSubnetId:
    Description: "作成されたパブリックサブネットのID"
    Value: !Ref PublicSubnet
